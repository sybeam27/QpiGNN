# Synthetic Dataset list
- basic
- gaussian
- uniform
- outlier
- edge
- BA
- ER
- grid
- tree

# Real Dataset list
- education
- election
- income
- unemployment
- PTBR
- chameleon
- crocodile
- squirrel
- Anaheim
- ChicagoSketch

# QpiGNN
python train.py --dataset "basic" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.5
python train.py --dataset "gaussian" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.5
python train.py --dataset "uniform" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.5
python train.py --dataset "outlier" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.5
python train.py --dataset "edge" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.5
python train.py --dataset "BA" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.5
python train.py --dataset "ER" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.5
python train.py --dataset "grid" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.5
python train.py --dataset "tree" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.5

python train.py --dataset "education" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.1
python train.py --dataset "election" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.1
python train.py --dataset "income" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.1
python train.py --dataset "unemployment" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.1
python train.py --dataset "PTBR" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.1
python train.py --dataset "chameleon" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.1
python train.py --dataset "crocodile" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.1
python train.py --dataset "squirrel" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.1
python train.py --dataset "Anaheim" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.1
python train.py --dataset "ChicagoSketch" --model "GQNN" --target_coverage 0.9 --lambda_factor 0.1

# QpiGNN (optimal)
python train.py --dataset "basic" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "gaussian" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "uniform" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "outlier" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "edge" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "BA" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "ER" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "grid" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "tree" --model "GQNN" --target_coverage 0.9 --optimal

python train.py --dataset "education" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "election" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "income" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "unemployment" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "PTBR" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "chameleon" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "crocodile" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "squirrel" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "Anaheim" --model "GQNN" --target_coverage 0.9 --optimal
python train.py --dataset "ChicagoSketch" --model "GQNN" --target_coverage 0.9 --optimal


# Ablation
python ablation.py --dataset "basic" --model GQNN --pdf False 
python ablation.py --dataset "gaussian" --model GQNN --pdf False 
python ablation.py --dataset "uniform" --model GQNN --pdf False 
python ablation.py --dataset "outlier" --model GQNN --pdf False 
python ablation.py --dataset "edge" --model GQNN --pdf False 
python ablation.py --dataset "BA" --model GQNN --pdf False 
python ablation.py --dataset "ER" --model GQNN --pdf False 
python ablation.py --dataset "grid" --model GQNN --pdf False
python ablation.py --dataset "tree" --model GQNN --pdf False 
